{"version":3,"sources":["redux/constants.js","redux/reducer.js","redux/actions.js","components/context.js","components/TodoList/TodoItem.jsx","components/TodoList/TodoList.jsx","components/AddTodos/AddTodos.jsx","components/TodosFilter/TodosFilter.jsx","components/App.jsx","index.js"],"names":["ADD_TODO","TOGGLE_TODO","SHOW_ALL","SHOW_COMPLETED","SHOW_ACTIVE","DELETE_TODO","CHANGE_TODO","MARK_ALL_TODOS","CLEAR_COMPLETED_TODOS","GET_TODOS_FROM_LS","GET_TODOS_FROM_SERVER","rootReducer","combineReducers","todos","state","action","type","console","log","newTodo","map","todo","id","completed","filter","title","isAllToodosCompleted","addLocalTodo","deleteTodo","todoId","dispatch","a","url","process","fetch","method","e","changeLocalTodo","changeTodo","headers","body","JSON","stringify","markAllTodosLocal","CheckoutDrawerContext","createContext","TodoItem","useSelector","useDispatch","useState","editTodo","setEditTodo","todoTitle","setTodoTitle","useContext","className","classNames","editing","onDoubleClick","value","autoFocus","onChange","event","target","onKeyUp","key","trim","onBlur","checked","onClick","TodoList","filteredTodos","AddTodos","newTodoTitle","setNewTodoTitle","addNewTodo","preventDefault","uuidv4","onSubmit","placeholder","TodosFilter","todosFilter","useStore","getState","subscribe","href","selected","App","unCompletedTodos","setUnCompletedTodos","completedTodos","setCompletedTodos","setIsAllToodosCompleted","useEffect","res","json","every","item","length","actions","htmlFor","Provider","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7aec92c3.chunk.js","sourcesContent":["export const ADD_TODO = 'ADD_TODO';\nexport const TOGGLE_TODO = 'TOGGLE_TODO';\nexport const SHOW_ALL = 'SHOW_ALL';\nexport const SHOW_COMPLETED = 'SHOW_COMPLETED';\nexport const SHOW_ACTIVE = 'SHOW_ACTIVE';\nexport const DELETE_TODO = 'DELETE_TODO';\nexport const CHANGE_TODO = 'CHANGE_TODO';\nexport const MARK_ALL_TODOS = 'MARK_ALL_TODOS';\nexport const CLEAR_COMPLETED_TODOS = 'CLEAR_COMPLETED_TODOS';\nexport const GET_TODOS_FROM_LS = 'GET_TODOS_FROM_LS';\nexport const GET_TODOS_FROM_SERVER = 'GET_TODOS_FROM_SERVER';\n","import { combineReducers } from 'redux';\nimport {\n  ADD_TODO,\n  SHOW_ACTIVE,\n  SHOW_ALL,\n  SHOW_COMPLETED,\n  TOGGLE_TODO,\n  DELETE_TODO,\n  CHANGE_TODO,\n  MARK_ALL_TODOS,\n  CLEAR_COMPLETED_TODOS,\n  GET_TODOS_FROM_LS,\n  GET_TODOS_FROM_SERVER,\n} from './constants';\n\nconst todosReducer = (state = [], action) => {\n  switch (action.type) {\n    case GET_TODOS_FROM_LS:\n      return [...action.todos];\n\n    case GET_TODOS_FROM_SERVER:\n      return [...action.todos];\n\n    // case ADD_TODO:\n    //   return [\n    //     ...state,\n    //     {\n    //       title: action.title,\n    //       id: action.id,\n    //       completed: false,\n    //     },\n    //   ];\n\n    case ADD_TODO:\n      console.log(action);\n      return [...state, action.newTodo];\n\n    case TOGGLE_TODO:\n      return [...state].map(todo => {\n        if (todo.id === action.id) {\n          return {\n            ...todo,\n            completed: !todo.completed,\n          };\n        }\n\n        return todo;\n      });\n\n    case DELETE_TODO:\n      return [...state].filter(todo => todo.id !== action.id);\n\n    case CHANGE_TODO:\n      return [...state].map(todo => {\n        if (todo.id === action.id) {\n          return {\n            ...todo,\n            title: action.title,\n          };\n        }\n\n        return todo;\n      });\n    case MARK_ALL_TODOS:\n      if (action.isAllToodosCompleted) {\n        return [...state].map(todo => ({\n          ...todo,\n          completed: false,\n        }));\n      }\n\n      return [...state].map(todo => ({\n        ...todo,\n        completed: true,\n      }));\n\n    case CLEAR_COMPLETED_TODOS:\n      return [...state].filter(todo => !todo.completed);\n\n    default:\n      return state;\n  }\n};\n\nconst filterForTodos = (state = SHOW_ALL, action) => {\n  switch (action.type) {\n    case SHOW_ALL:\n      return SHOW_ALL;\n\n    case SHOW_COMPLETED:\n      return SHOW_COMPLETED;\n\n    case SHOW_ACTIVE:\n      return SHOW_ACTIVE;\n\n    default:\n      return state;\n  }\n};\n\nexport const rootReducer = combineReducers({\n  todos: todosReducer,\n  filter: filterForTodos,\n});\n","import {\n  ADD_TODO,\n  SHOW_ACTIVE,\n  SHOW_ALL,\n  SHOW_COMPLETED,\n  TOGGLE_TODO,\n  DELETE_TODO,\n  CHANGE_TODO,\n  MARK_ALL_TODOS,\n  CLEAR_COMPLETED_TODOS,\n  GET_TODOS_FROM_LS,\n  GET_TODOS_FROM_SERVER,\n} from './constants';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const getTodosFromLS = () => dispatch => {\n  if (JSON.parse(localStorage.getItem('todos'))) {\n    const todos = JSON.parse(localStorage.getItem('todos'));\n\n    dispatch({\n      type: GET_TODOS_FROM_LS,\n      todos,\n    });\n  }\n};\n\nexport const getTodosFromServer = () => dispatch => {\n  try {\n    (async function () {\n      const url = process.env.REACT_APP_API_URL + '/todos';\n      const res = await fetch(url);\n      const todos = await res.json();\n      dispatch({\n        type: GET_TODOS_FROM_SERVER,\n        todos,\n      });\n    })();\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nconst addLocalTodo = newTodo => ({\n  type: ADD_TODO,\n  newTodo,\n});\n\nexport const addTodo = title => dispatch => {\n  try {\n    const newTodo = {\n      id: uuidv4(),\n      completed: false,\n      title,\n    };\n\n    (async function () {\n      const url = process.env.REACT_APP_API_URL + '/todos';\n\n      await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json; charset=utf-8',\n        },\n        body: JSON.stringify(newTodo),\n      });\n\n      dispatch(addLocalTodo(newTodo));\n    })();\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nconst deleteLocalTodo = id => ({\n  type: DELETE_TODO,\n  id,\n});\n\nexport const deleteTodo = todoId => dispatch => {\n  try {\n    (async function () {\n      const url = `${process.env.REACT_APP_API_URL}/todos/${todoId}`;\n\n      await fetch(url, {\n        method: 'DELETE',\n      });\n\n      dispatch(deleteLocalTodo(todoId));\n    })();\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const toggleLocalTodo = id => ({\n  type: TOGGLE_TODO,\n  id,\n});\n\nexport const toggleTodo = todoId => dispatch => {\n  try {\n    (async function () {\n      const url = `${process.env.REACT_APP_API_URL}/todos/update/${todoId}`;\n\n      await fetch(url, {\n        method: 'PATCH',\n      });\n\n      dispatch(toggleLocalTodo(todoId));\n    })();\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const changeLocalTodo = (todoId, title) => ({\n  type: CHANGE_TODO,\n  id: todoId,\n  title,\n});\n\nexport const changeTodo = (todoId, title) => dispatch => {\n  try {\n    (async function () {\n      const url = `${process.env.REACT_APP_API_URL}/todos/update/${todoId}`;\n\n      await fetch(url, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json; charset=utf-8',\n        },\n        body: JSON.stringify({\n          title,\n        }),\n      });\n\n      dispatch(changeLocalTodo(todoId, title));\n    })();\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const markAllTodosLocal = isAllToodosCompleted => ({\n  type: MARK_ALL_TODOS,\n  isAllToodosCompleted,\n});\n\nexport const markAllTodos = isAllToodosCompleted =>  dispatch => {\n  try {\n    (async function () {\n      const url = `${process.env.REACT_APP_API_URL}/todos/mark-all-todos/`;\n\n      await fetch(url, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json; charset=utf-8',\n        },\n        body: JSON.stringify({\n          isAllToodosCompleted,\n        }),\n      });\n\n      dispatch(markAllTodosLocal(isAllToodosCompleted));\n    })();\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const clearCompletedTodosLocal = () => ({\n  type: CLEAR_COMPLETED_TODOS,\n});\n\nexport const clearCompletedTodos = () =>  dispatch => {\n  try {\n    (async function () {\n      const url = `${process.env.REACT_APP_API_URL}/delete-completed-todos/`;\n\n      await fetch(url, {\n        method: 'DELETE',\n      });\n\n      dispatch(clearCompletedTodosLocal());\n    })();\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const showAllTodos = () => ({ type: SHOW_ALL });\nexport const showCompletedTodos = () => ({ type: SHOW_COMPLETED });\nexport const showActiveTodos = () => ({ type: SHOW_ACTIVE });\n","import { createContext } from 'react';\n\nconst CheckoutDrawerContext = createContext('CONTEXT');\n\nexport default CheckoutDrawerContext;\n","import React, { useContext, useState } from \"react\";\nimport PropTypes, { shape } from \"prop-types\";\n\nimport classNames from \"classnames/bind\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport { changeTodo, toggleTodo, deleteTodo } from \"../../redux/actions\";\n\nimport CheckoutDrawerContext from \"../context\";\n\nconst TodoItem = ({\n  // todos,\n  todo,\n  // changeTodo,\n  // toggleTodo,\n  // deleteTodo,\n}) => {\n  const todos = useSelector((state) => state.todos);\n  const dispatch = useDispatch();\n\n  const [editTodo, setEditTodo] = useState(false);\n  const [todoTitle, setTodoTitle] = useState(todo.title);\n\n  const value = useContext(CheckoutDrawerContext);\n\n  const handleEditing = (event) => {\n    if (event.key === \"Enter\") {\n      if (todoTitle) {\n        dispatch(changeTodo(todo.id, todoTitle.trim()));\n      } else {\n        dispatch(deleteTodo(todo.id));\n      }\n\n      setEditTodo(false);\n    }\n\n    if (event.key === \"Escape\") {\n      setTodoTitle(todo.title);\n      setEditTodo(false);\n    }\n  };\n\n  const removefocus = (event) => {\n    if (todoTitle) {\n      dispatch(changeTodo(todo.id, todoTitle.trim()));\n    } else {\n      dispatch(deleteTodo(todo.id));\n    }\n\n    setEditTodo(false);\n  };\n\n  return (\n    <li\n      className={classNames({\n        completed: todo.completed,\n        editing: editTodo,\n      })}\n      onDoubleClick={() => setEditTodo(!editTodo)}\n    >\n      {!editTodo ? (\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            checked={todo.completed}\n            onChange={() => dispatch(toggleTodo(todo.id, todos))}\n          />\n          <label>{todo.title}</label>\n          <button\n            type=\"button\"\n            className=\"destroy\"\n            onClick={() => dispatch(deleteTodo(todo.id))}\n          />\n        </div>\n      ) : (\n        <input\n          type=\"text\"\n          className=\"edit\"\n          value={todoTitle}\n          autoFocus\n          onChange={event => setTodoTitle(event.target.value)}\n          onKeyUp={handleEditing}\n          onBlur={removefocus}\n        />\n      )}\n    </li>\n  );\n};\n\nTodoItem.propTypes = {\n  // todos: PropTypes.arrayOf(\n  //   shape({\n  //     id: PropTypes.isRequired,\n  //     completed: PropTypes.bool.isRequired,\n  //   })\n  // ).isRequired,\n  todo: PropTypes.shape({\n    id: PropTypes.isRequired,\n    completed: PropTypes.bool.isRequired,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n  // toggleTodo: PropTypes.func.isRequired,\n  // deleteTodo: PropTypes.func.isRequired,\n  // changeTodo: PropTypes.func.isRequired,\n};\n\n// const mapStateToProps = state => ({\n//   todos: state.todos,\n// });\n\n// export default connect(mapStateToProps, actions)(TodoItem);\nexport default TodoItem;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes, { shape } from \"prop-types\";\n\nimport TodoItem from \"./TodoItem\";\nimport * as actions from \"../../redux/actions\";\n\nexport const TodoList = ({ filteredTodos }) => {\n  return (\n    <ul className=\"todo-list\">\n      {filteredTodos.map((todo) => (\n        <TodoItem key={todo.id} todo={todo} />\n      ))}\n    </ul>\n  );\n};\n\nTodoList.propTypes = {\n  filteredTodos: PropTypes.arrayOf(\n    shape({\n      id: PropTypes.isRequired,\n      completed: PropTypes.bool.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default TodoList;\n","import React, { useState  } from 'react';\nimport PropTypes, { shape } from 'prop-types';\nimport { connect, useSelector, useDispatch } from 'react-redux';\n// import * as actions from '../../redux/actions';\nimport { addTodo } from '../../redux/actions';\n\nconst AddTodos = () => {\n  const dispatch = useDispatch();\n  const [newTodoTitle, setNewTodoTitle] = useState('');\n\n  const addNewTodo = (event) => {\n    event.preventDefault();\n\n    if (newTodoTitle.trim() === '') {\n      return;\n    } \n    \n    dispatch(addTodo(newTodoTitle));\n\n    setNewTodoTitle('');\n  };\n\n  return (\n    <form onSubmit={event => addNewTodo(event)}>\n      <input\n        type=\"text\"\n        className=\"new-todo\"\n        placeholder=\"What needs to be done?\"\n        value={newTodoTitle}\n        onChange={({ target }) => setNewTodoTitle(target.value)}\n      />\n    </form>\n  );\n};\n\n// AddTodos.propTypes = {\n//   todos: PropTypes.arrayOf(shape({\n//     id: PropTypes.isRequired,\n//     completed: PropTypes.bool.isRequired,\n//   })).isRequired,\n//   addTodo: PropTypes.func.isRequired,\n// };\n\n// const mapStateToProps = state => ({\n//   todos: state.todos,\n// });\n\n// export default connect(mapStateToProps, ({ addTodo }))(AddTodos);\n// export default connect(mapStateToProps, actions)(AddTodos);\n\nexport default AddTodos;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames/bind\";\nimport { connect, useDispatch, useSelector, useStore } from \"react-redux\";\nimport {\n  showAllTodos,\n  showCompletedTodos,\n  showActiveTodos,\n} from \"../../redux/actions\";\n\nimport { SHOW_ACTIVE, SHOW_ALL, SHOW_COMPLETED } from \"../../redux/constants\";\n\nconst TodosFilter = () => {\n  const todosFilter = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n\n  const { getState, subscribe } = useStore();\n\n  return (\n    <ul className=\"filters\">\n      <li>\n        <a\n          href=\"#/\"\n          className={classNames({\n            selected: todosFilter === SHOW_ALL,\n          })}\n          onClick={() => dispatch(showAllTodos())}\n        >\n          All\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/active\"\n          className={classNames({\n            selected: todosFilter === SHOW_ACTIVE,\n          })}\n          onClick={() => dispatch(showActiveTodos())}\n        >\n          Active\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/completed\"\n          className={classNames({\n            selected: todosFilter === SHOW_COMPLETED,\n          })}\n          onClick={() => dispatch(showCompletedTodos())}\n        >\n          Completed\n        </a>\n      </li>\n    </ul>\n  );\n};\n\n// TodosFilter.propTypes = {\n//   todosFilter: PropTypes.string.isRequired,\n//   showAllTodos: PropTypes.func.isRequired,\n//   showCompletedTodos: PropTypes.func.isRequired,\n//   showActiveTodos: PropTypes.func.isRequired,\n// };\n\n// const mapStateToProps = state => ({\n//   todos: state.todos,\n//   todosFilter: state.filter,\n// });\n\n// export default connect(mapStateToProps, {\n//   showAllTodos: actions.showAllTodos,\n//   showCompletedTodos: actions.showCompletedTodos,\n//   showActiveTodos: actions.showActiveTodos,\n// })(TodosFilter);\n\n// export default connect(mapStateToProps, actions)(TodosFilter);\nexport default TodosFilter;\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { connect, useSelector, shallowEqual, useDispatch } from 'react-redux';\nimport PropTypes, { shape } from 'prop-types';\n \nimport { TodoList } from './TodoList/TodoList';\nimport AddTodos from './AddTodos/AddTodos'; \nimport TodosFilter from './TodosFilter/TodosFilter';\n\nimport { SHOW_ACTIVE, SHOW_ALL, SHOW_COMPLETED } from '../redux/constants';\n\nimport * as actions from '../redux/actions';\n\nimport CheckoutDrawerContext from './context';\n\nconst App = () => {\n  const [unCompletedTodos, setUnCompletedTodos] = useState('');\n  const [completedTodos, setCompletedTodos] = useState('');\n  const [isAllToodosCompleted, setIsAllToodosCompleted] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const todos = useSelector(state => state.todos);\n  const todosFilter = useSelector(state => state.filter);\n\n  const filterTodosByCompleteStatus = () => {\n    if (todosFilter === SHOW_COMPLETED) {\n      return todos.filter(todo => todo.completed);\n    }\n\n    if (todosFilter === SHOW_ACTIVE) {\n      return todos.filter(todo => !todo.completed);\n    }\n\n    return todos;\n  };\n\n  const filteredTodos = filterTodosByCompleteStatus();\n \n\n  useEffect(() => {\n    // dispatch(actions.getTodosFromLS());\n    dispatch(actions.getTodosFromServer());\n\n  }, []);\n\n  useEffect(() => {\n    // dispatch(actions.getTodosFromServer());\n\n    setUnCompletedTodos(() => todos.filter(todo => !todo.completed));\n    setCompletedTodos(() => todos.filter(todo => todo.completed));\n\n    setIsAllToodosCompleted(() => todos.every(item => item.completed === true));\n\n    // localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]);\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos</h1>\n        <AddTodos />\n      </header>\n      {todos.length !== 0 ? (\n        <>\n          <section className=\"main\">\n            <input\n              type=\"checkbox\"\n              id=\"toggle-all\"\n              className=\"toggle-all\"\n              checked={isAllToodosCompleted}\n              onChange={() =>\n                dispatch(actions.markAllTodos(isAllToodosCompleted))\n              }\n            />\n            <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n            <CheckoutDrawerContext.Provider value=\"sddsds\">\n              <TodoList filteredTodos={filteredTodos} />\n            </CheckoutDrawerContext.Provider>\n          </section>\n\n          <footer className=\"footer\">\n            <span className=\"todo-count\">\n              {unCompletedTodos.length}\n              {unCompletedTodos.length === 1 ? ' item ' : ' items '}\n              left\n            </span>\n\n            <TodosFilter />\n            {completedTodos.length > 0 ? (\n              <button\n                type=\"button\"\n                className=\"clear-completed\"\n                onClick={() => dispatch(actions.clearCompletedTodos())}\n              >\n                Clear completed\n              </button>\n            ) : (\n              ''\n            )}\n          </footer>\n        </>\n      ) : (\n        ''\n      )}\n    </section>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { compose, applyMiddleware, createStore } from 'redux';\n\nimport thunk from 'redux-thunk';\n\nimport { Provider } from 'react-redux';\n\nimport { rootReducer } from './redux/reducer';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport App from './components/App';\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}